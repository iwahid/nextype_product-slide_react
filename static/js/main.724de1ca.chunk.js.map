{"version":3,"sources":["components/blocks/slide/slide.jsx","components/blocks/slider/slider.jsx","components/blocks/section/section.jsx","App.js","index.js"],"names":["Slide","product","imageUrl","id","linkUrl","title","description","promotion","price","specifications","className","src","alt","map","item","index","key","value","currentPrice","oldPrice","href","Slider","productList","useState","x","setX","style","transform","onClick","length","width","height","viewBox","fill","xmlns","d","class","Section","type","App","React","setProductList","useEffect","fetch","then","resp","json","jsonResult","products","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.724de1ca.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Slide({ product }) {\r\n\r\n  const { id, imageUrl, linkUrl, title, description, promotion, price, specifications } = product\r\n  return (\r\n    <div className=\"slide\" >\r\n      <div className=\"slide__left-section\">\r\n        <div className=\"img-container\">\r\n          <img src={imageUrl} alt={title} />\r\n        </div>\r\n\r\n      </div>\r\n      <div className=\"slide__right-section\">\r\n        <ul className=\"promo-list\">\r\n          {\r\n            promotion && promotion.map((item, index) => <li key={index}><span>{item}</span></li>)\r\n          }\r\n\r\n        </ul>\r\n        <div className=\"product\">\r\n          <h2 className=\"product__title\">{title}</h2>\r\n          <h3 className=\"product__description\">{description}</h3>\r\n\r\n          <ul className=\"product__specifications\">\r\n            {\r\n              specifications && specifications.map((item, index) => {\r\n                return (\r\n                  < li key={index} >\r\n                    <span className=\"property\">{item.key}</span>\r\n                    <span className=\"separator\"></span>\r\n                    <span className=\"value\">{item.value}</span>\r\n                  </li>\r\n                )\r\n              })\r\n            }\r\n          </ul>\r\n\r\n          <hr />\r\n          <div className=\"product__purchase\">\r\n            <div className=\"product__price\">\r\n              <span className=\"current-price\">{price.currentPrice}</span>\r\n              <span className=\"old-price\">{price.oldPrice && price.oldPrice}</span>\r\n            </div>\r\n            {/* здесь вместо обычной ссылки должен будет находится элемент Link */}\r\n            <a className=\"more-details\" href={linkUrl} alt={`Посмотреть страницу товара ${title}`}>Подробнее</a>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default Slide\r\n","import React, { useState } from 'react'\r\nimport Slide from './../slide/slide'\r\n\r\nfunction Slider({ productList }) {\r\n\r\n  /** хук и функции для перелистывания слайдов с помощью кнопок.\r\n   * Обе функции высчитывают текущее значение номера слайда\r\n   * toPrev - перелистывает на предыдущий. Если это самый первый слайд, то возвращает на последний\r\n   * toNext - перелистывает на следущий. Если это последний слайд, то возвращает на первый\r\n   */\r\n  const [x, setX] = useState(0)\r\n  const toPrev = () => (x === 0) ? setX((productList.length - 1) * -100) : setX(x + 100)\r\n  const toNext = () => (x === ((productList.length - 1) * -100)) ? setX(0) : setX(x - 100)\r\n\r\n  return (\r\n    <div className=\"slider-wrapper\">\r\n      {/* обёртка, необходимая для позиционирования элементов управления вне рамок слайдера */}\r\n\r\n      {/* div с классом slide-wrapper необходим для того, что бы задать внешний каркас для внутреннего \"резинового\" содержимого слайда */}\r\n      <div className=\"slider\">\r\n        <div className=\"slider__list\">\r\n          {productList.map((product, index) => {\r\n            return (\r\n              <div key={index}\r\n                className=\"slide-wrapper\"\r\n                style={{ transform: `translateX(${x}%)` }} >\r\n                <Slide product={product}></Slide>\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n\r\n        {/* кнопки переключения слайдов */}\r\n        <button onClick={toPrev} className=\"toPrev\">\r\n          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M7.52203 11.1669L11.992 6.69689L10.8137 5.51855L4.33203 12.0002L10.8137 18.4819L11.992 17.3036L7.52203 12.8336H19.6654V11.1669H7.52203Z\" fill=\"#353545\" />\r\n          </svg>\r\n        </button>\r\n\r\n        <button onClick={toNext} className=\"toNext\">\r\n          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M7.52203 11.1669L11.992 6.69689L10.8137 5.51855L4.33203 12.0002L10.8137 18.4819L11.992 17.3036L7.52203 12.8336H19.6654V11.1669H7.52203Z\" fill=\"#353545\" />\r\n          </svg>\r\n        </button>\r\n\r\n        {/* буллеты для переключения слайдов. Каждый из них перелистывает на определённый слайд через хуки */}\r\n        <div class=\"slider__pagination\">\r\n          {\r\n            productList.map((item, index) => <span\r\n              key={index}\r\n              onClick={() => { setX(index * -100) }} className={`bullet ${((x === index * -100) ? \"bullet--active\" : \"\")}`}></span>)\r\n          }\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Slider\r\n","import React from 'react'\r\nimport Slider from './../slider/slider'\r\nimport Slide from './../slide/slide'\r\n\r\nfunction Section({productList}) {\r\n  /* Насколько я понял, этот фрагмент представляет собой панель с табами. Одно из наиболее быстрых решений - вкладки представлены кнопками, а первая (активная) будет заменяться на h1 - нет необходимости в интерактивности этого элемента (он уже выбран), к тому же, возможно, это может повлиять в лучшую сторону в плане семантики (но не уверен в этом)  */\r\n  return (\r\n    <section className=\"section\">\r\n      <header className=\"section__header\">\r\n        <div className=\"section__tabs\">\r\n          <h2 className=\"section__tab\">Лучшие товары</h2>\r\n          <button type=\"submit\" className=\"section__tab\">Все товары</button>\r\n        </div>\r\n        <p className=\"section__description\">\r\n          Идейные соображения высшего порядка, а также сложившаяся структура организации представляет собой интересный эксперимент проверки направлений прогрессивного развития.\r\n        </p>\r\n      </header>\r\n\r\n      <Slider\r\n      productList={productList}/>\r\n\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Section\r\n","import React from 'react';\nimport Section from './components/blocks/section/section'\n\nfunction App() {\n\n\n  /* хук, для загрузки данных. Имитирующий componentDidMount благодаря отсутствию зависимостей*/\n  const [productList, setProductList] = React.useState([])\n\n  /* \"Получаю\" данные здесь, а не внутри компонента Section из-за того, что на мой взгляд, более корректно получить все данные сразу, и тратить время только на их рендеринг во время переключения категорий \"Лучшие товары\" и \"Все товары\", а не на загрузку списка, каждый раз при смене вкладки */\n  React.useEffect(() => {\n    fetch(\"/db.json\")\n      .then((resp) => resp.json())\n      .then((jsonResult) => {\n        setProductList(jsonResult.products)\n        console.log(\"Результат запроса: \", productList)\n      }\n      )\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <Section\n          productList={productList} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}